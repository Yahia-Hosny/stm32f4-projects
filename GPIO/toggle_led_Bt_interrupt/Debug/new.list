
new.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000778  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800090c  08000914  00010914  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800090c  0800090c  00010914  2**0
                  CONTENTS
  4 .ARM          00000000  0800090c  0800090c  00010914  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800090c  08000914  00010914  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800090c  0800090c  0001090c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000910  08000910  00010910  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010914  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000914  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000914  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010914  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001093e  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a78  00000000  00000000  00010981  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002e2  00000000  00000000  000113f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000d0  00000000  00000000  000116e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000092  00000000  00000000  000117b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002294  00000000  00000000  00011842  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000fa0  00000000  00000000  00013ad6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000086da  00000000  00000000  00014a76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000002b0  00000000  00000000  0001d150  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000041  00000000  00000000  0001d400  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080008f4 	.word	0x080008f4

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080008f4 	.word	0x080008f4

080001d4 <delay>:
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


void delay()
 {
 80001d4:	b490      	push	{r4, r7}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
    for (long long int i = 0; i < 500000/2; i++)
 80001da:	f04f 0200 	mov.w	r2, #0
 80001de:	f04f 0300 	mov.w	r3, #0
 80001e2:	e9c7 2300 	strd	r2, r3, [r7]
 80001e6:	e006      	b.n	80001f6 <delay+0x22>
 80001e8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80001ec:	1c50      	adds	r0, r2, #1
 80001ee:	f143 0100 	adc.w	r1, r3, #0
 80001f2:	e9c7 0100 	strd	r0, r1, [r7]
 80001f6:	e9d7 2300 	ldrd	r2, r3, [r7]
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <delay+0x3c>)
 80001fc:	42a2      	cmp	r2, r4
 80001fe:	f173 0300 	sbcs.w	r3, r3, #0
 8000202:	dbf1      	blt.n	80001e8 <delay+0x14>
    {
        /* code */
    }

 }
 8000204:	bf00      	nop
 8000206:	bf00      	nop
 8000208:	3708      	adds	r7, #8
 800020a:	46bd      	mov	sp, r7
 800020c:	bc90      	pop	{r4, r7}
 800020e:	4770      	bx	lr
 8000210:	0003d090 	.word	0x0003d090

08000214 <main>:

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
//     GPIOD_PCLK_EN;
//     GPIOD->MODER |=  (1 << 4)  ;
//     GPIOD->MODER &= ~(1 << 5)  ;

	GPIO_Handler gpio_led;
	    memset(&gpio_led,0,sizeof(gpio_led));
 800021a:	f107 030c 	add.w	r3, r7, #12
 800021e:	220c      	movs	r2, #12
 8000220:	2100      	movs	r1, #0
 8000222:	4618      	mov	r0, r3
 8000224:	f000 fb39 	bl	800089a <memset>
	    gpio_led.GPIOX = GPIOA ;
 8000228:	4b1a      	ldr	r3, [pc, #104]	; (8000294 <main+0x80>)
 800022a:	60fb      	str	r3, [r7, #12]
	    gpio_led.GPIO_Pin_Conf.PinNum   = GPIO_PIN_3;
 800022c:	2303      	movs	r3, #3
 800022e:	743b      	strb	r3, [r7, #16]
	    gpio_led.GPIO_Pin_Conf.PinMode  = GPIO_MODE_OUT ;
 8000230:	2301      	movs	r3, #1
 8000232:	747b      	strb	r3, [r7, #17]
	    gpio_led.GPIO_Pin_Conf.PinOPTYP = GPIO_OUTYPE_PP ;
 8000234:	2300      	movs	r3, #0
 8000236:	753b      	strb	r3, [r7, #20]
	    gpio_led.GPIO_Pin_Conf.PinPUPDR = GPIO_PIN_PUPD_PU ;
 8000238:	2301      	movs	r3, #1
 800023a:	74fb      	strb	r3, [r7, #19]
	    gpio_led.GPIO_Pin_Conf.PinSpeed = GPIO_OUTSPEED_HIGH ;
 800023c:	2302      	movs	r3, #2
 800023e:	74bb      	strb	r3, [r7, #18]

	    GPIO_clkCntrl(GPIOA, ENABLE);
 8000240:	2101      	movs	r1, #1
 8000242:	4814      	ldr	r0, [pc, #80]	; (8000294 <main+0x80>)
 8000244:	f000 f838 	bl	80002b8 <GPIO_clkCntrl>

        GPIO_init(&gpio_led);
 8000248:	f107 030c 	add.w	r3, r7, #12
 800024c:	4618      	mov	r0, r3
 800024e:	f000 f8a3 	bl	8000398 <GPIO_init>


		GPIO_Handler gpio_BT;
	    memset(& gpio_BT,0,sizeof(gpio_BT));
 8000252:	463b      	mov	r3, r7
 8000254:	220c      	movs	r2, #12
 8000256:	2100      	movs	r1, #0
 8000258:	4618      	mov	r0, r3
 800025a:	f000 fb1e 	bl	800089a <memset>

		gpio_BT.GPIOX = GPIOA;
 800025e:	4b0d      	ldr	r3, [pc, #52]	; (8000294 <main+0x80>)
 8000260:	603b      	str	r3, [r7, #0]
		gpio_BT.GPIO_Pin_Conf.PinNum    = GPIO_PIN_0;
 8000262:	2300      	movs	r3, #0
 8000264:	713b      	strb	r3, [r7, #4]
		gpio_BT.GPIO_Pin_Conf.PinMode   = GPIO_MODE_IT_FT;
 8000266:	2304      	movs	r3, #4
 8000268:	717b      	strb	r3, [r7, #5]
	    gpio_BT.GPIO_Pin_Conf.PinSpeed  = GPIO_OUTSPEED_HIGH ;
 800026a:	2302      	movs	r3, #2
 800026c:	71bb      	strb	r3, [r7, #6]
	    gpio_BT.GPIO_Pin_Conf.PinPUPDR  = GPIO_PIN_PUPD_PU ;
 800026e:	2301      	movs	r3, #1
 8000270:	71fb      	strb	r3, [r7, #7]

	    GPIO_clkCntrl(GPIOA, ENABLE);
 8000272:	2101      	movs	r1, #1
 8000274:	4807      	ldr	r0, [pc, #28]	; (8000294 <main+0x80>)
 8000276:	f000 f81f 	bl	80002b8 <GPIO_clkCntrl>

        GPIO_init(&gpio_BT);
 800027a:	463b      	mov	r3, r7
 800027c:	4618      	mov	r0, r3
 800027e:	f000 f88b 	bl	8000398 <GPIO_init>

// irq conf
        GPIO_IRQconf(IRQ_NUM_EXTI0, ENABLE);
 8000282:	2101      	movs	r1, #1
 8000284:	2006      	movs	r0, #6
 8000286:	f000 fa0b 	bl	80006a0 <GPIO_IRQconf>
        GPIO_PriorityConf(IRQ_PRIRITY_15, IRQ_NUM_EXTI0);
 800028a:	2106      	movs	r1, #6
 800028c:	200f      	movs	r0, #15
 800028e:	f000 fa8b 	bl	80007a8 <GPIO_PriorityConf>

while(1) ;
 8000292:	e7fe      	b.n	8000292 <main+0x7e>
 8000294:	40020000 	.word	0x40020000

08000298 <EXTI0_IRQHandler>:


}

 void EXTI0_IRQHandler (void)
 {
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
	 delay();
 800029c:	f7ff ff9a 	bl	80001d4 <delay>
	 GPIO_IRQ_Handle(GPIO_PIN_0);
 80002a0:	2000      	movs	r0, #0
 80002a2:	f000 fab1 	bl	8000808 <GPIO_IRQ_Handle>
	 GPIO_ToggPin(GPIOA, GPIO_PIN_3);
 80002a6:	2103      	movs	r1, #3
 80002a8:	4802      	ldr	r0, [pc, #8]	; (80002b4 <EXTI0_IRQHandler+0x1c>)
 80002aa:	f000 f9e5 	bl	8000678 <GPIO_ToggPin>
 }
 80002ae:	bf00      	nop
 80002b0:	bd80      	pop	{r7, pc}
 80002b2:	bf00      	nop
 80002b4:	40020000 	.word	0x40020000

080002b8 <GPIO_clkCntrl>:
*
* @Note              -  none

 */
void GPIO_clkCntrl(GPIO_REGDEF *pGpio, uint8_t EnOrDsi)
{
 80002b8:	b480      	push	{r7}
 80002ba:	b083      	sub	sp, #12
 80002bc:	af00      	add	r7, sp, #0
 80002be:	6078      	str	r0, [r7, #4]
 80002c0:	460b      	mov	r3, r1
 80002c2:	70fb      	strb	r3, [r7, #3]
    if (EnOrDsi == ENABLE)
 80002c4:	78fb      	ldrb	r3, [r7, #3]
 80002c6:	2b01      	cmp	r3, #1
 80002c8:	d12b      	bne.n	8000322 <GPIO_clkCntrl+0x6a>
    {
        if (pGpio == GPIOA)
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a2d      	ldr	r2, [pc, #180]	; (8000384 <GPIO_clkCntrl+0xcc>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d106      	bne.n	80002e0 <GPIO_clkCntrl+0x28>
        {
            GPIOA_PCLK_EN;
 80002d2:	4b2d      	ldr	r3, [pc, #180]	; (8000388 <GPIO_clkCntrl+0xd0>)
 80002d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d6:	4a2c      	ldr	r2, [pc, #176]	; (8000388 <GPIO_clkCntrl+0xd0>)
 80002d8:	f043 0301 	orr.w	r3, r3, #1
 80002dc:	6313      	str	r3, [r2, #48]	; 0x30
        else if (pGpio == GPIOD)
        {
            GPIOD_PCLK_DS;
        }
    }
}
 80002de:	e04b      	b.n	8000378 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOB)
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a2a      	ldr	r2, [pc, #168]	; (800038c <GPIO_clkCntrl+0xd4>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <GPIO_clkCntrl+0x3e>
            GPIOB_PCLK_EN;
 80002e8:	4b27      	ldr	r3, [pc, #156]	; (8000388 <GPIO_clkCntrl+0xd0>)
 80002ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ec:	4a26      	ldr	r2, [pc, #152]	; (8000388 <GPIO_clkCntrl+0xd0>)
 80002ee:	f043 0302 	orr.w	r3, r3, #2
 80002f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f4:	e040      	b.n	8000378 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOC)
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a25      	ldr	r2, [pc, #148]	; (8000390 <GPIO_clkCntrl+0xd8>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_clkCntrl+0x54>
            GPIOC_PCLK_EN;
 80002fe:	4b22      	ldr	r3, [pc, #136]	; (8000388 <GPIO_clkCntrl+0xd0>)
 8000300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000302:	4a21      	ldr	r2, [pc, #132]	; (8000388 <GPIO_clkCntrl+0xd0>)
 8000304:	f043 0304 	orr.w	r3, r3, #4
 8000308:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030a:	e035      	b.n	8000378 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOD)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a21      	ldr	r2, [pc, #132]	; (8000394 <GPIO_clkCntrl+0xdc>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d131      	bne.n	8000378 <GPIO_clkCntrl+0xc0>
            GPIOD_PCLK_EN;
 8000314:	4b1c      	ldr	r3, [pc, #112]	; (8000388 <GPIO_clkCntrl+0xd0>)
 8000316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000318:	4a1b      	ldr	r2, [pc, #108]	; (8000388 <GPIO_clkCntrl+0xd0>)
 800031a:	f043 0308 	orr.w	r3, r3, #8
 800031e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000320:	e02a      	b.n	8000378 <GPIO_clkCntrl+0xc0>
        if (pGpio == GPIOA)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a17      	ldr	r2, [pc, #92]	; (8000384 <GPIO_clkCntrl+0xcc>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <GPIO_clkCntrl+0x80>
            GPIOA_PCLK_DS;
 800032a:	4b17      	ldr	r3, [pc, #92]	; (8000388 <GPIO_clkCntrl+0xd0>)
 800032c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032e:	4a16      	ldr	r2, [pc, #88]	; (8000388 <GPIO_clkCntrl+0xd0>)
 8000330:	f023 0301 	bic.w	r3, r3, #1
 8000334:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000336:	e01f      	b.n	8000378 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOB)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a14      	ldr	r2, [pc, #80]	; (800038c <GPIO_clkCntrl+0xd4>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d106      	bne.n	800034e <GPIO_clkCntrl+0x96>
            GPIOB_PCLK_DS;
 8000340:	4b11      	ldr	r3, [pc, #68]	; (8000388 <GPIO_clkCntrl+0xd0>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a10      	ldr	r2, [pc, #64]	; (8000388 <GPIO_clkCntrl+0xd0>)
 8000346:	f023 0302 	bic.w	r3, r3, #2
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034c:	e014      	b.n	8000378 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOC)
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4a0f      	ldr	r2, [pc, #60]	; (8000390 <GPIO_clkCntrl+0xd8>)
 8000352:	4293      	cmp	r3, r2
 8000354:	d106      	bne.n	8000364 <GPIO_clkCntrl+0xac>
            GPIOC_PCLK_DS;
 8000356:	4b0c      	ldr	r3, [pc, #48]	; (8000388 <GPIO_clkCntrl+0xd0>)
 8000358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035a:	4a0b      	ldr	r2, [pc, #44]	; (8000388 <GPIO_clkCntrl+0xd0>)
 800035c:	f023 0304 	bic.w	r3, r3, #4
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000362:	e009      	b.n	8000378 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOD)
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4a0b      	ldr	r2, [pc, #44]	; (8000394 <GPIO_clkCntrl+0xdc>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d105      	bne.n	8000378 <GPIO_clkCntrl+0xc0>
            GPIOD_PCLK_DS;
 800036c:	4b06      	ldr	r3, [pc, #24]	; (8000388 <GPIO_clkCntrl+0xd0>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a05      	ldr	r2, [pc, #20]	; (8000388 <GPIO_clkCntrl+0xd0>)
 8000372:	f023 0308 	bic.w	r3, r3, #8
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	bf00      	nop
 800037a:	370c      	adds	r7, #12
 800037c:	46bd      	mov	sp, r7
 800037e:	bc80      	pop	{r7}
 8000380:	4770      	bx	lr
 8000382:	bf00      	nop
 8000384:	40020000 	.word	0x40020000
 8000388:	40023800 	.word	0x40023800
 800038c:	40020400 	.word	0x40020400
 8000390:	40020800 	.word	0x40020800
 8000394:	40020c00 	.word	0x40020c00

08000398 <GPIO_init>:
* @Note              -  none

 */
void GPIO_init(GPIO_Handler *pGpioHandler)

{ // pin number
 8000398:	b580      	push	{r7, lr}
 800039a:	b084      	sub	sp, #16
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
	 GPIO_clkCntrl(pGpioHandler ->GPIOX, ENABLE);
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	2101      	movs	r1, #1
 80003a6:	4618      	mov	r0, r3
 80003a8:	f7ff ff86 	bl	80002b8 <GPIO_clkCntrl>

    if (pGpioHandler->GPIO_Pin_Conf.PinMode <= GPIO_MODE_ANALOG)
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	795b      	ldrb	r3, [r3, #5]
 80003b0:	2b03      	cmp	r3, #3
 80003b2:	f200 80ba 	bhi.w	800052a <GPIO_init+0x192>
    {
        // pin mode
        uint8_t temp;
        temp = ((pGpioHandler->GPIO_Pin_Conf.PinMode) << (2 * (pGpioHandler->GPIO_Pin_Conf.PinNum)));
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	795b      	ldrb	r3, [r3, #5]
 80003ba:	461a      	mov	r2, r3
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	791b      	ldrb	r3, [r3, #4]
 80003c0:	005b      	lsls	r3, r3, #1
 80003c2:	fa02 f303 	lsl.w	r3, r2, r3
 80003c6:	733b      	strb	r3, [r7, #12]
        pGpioHandler->GPIOX->MODER &= ~((0x3) << (pGpioHandler->GPIO_Pin_Conf.PinNum));
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	681a      	ldr	r2, [r3, #0]
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	791b      	ldrb	r3, [r3, #4]
 80003d2:	4619      	mov	r1, r3
 80003d4:	2303      	movs	r3, #3
 80003d6:	408b      	lsls	r3, r1
 80003d8:	43db      	mvns	r3, r3
 80003da:	4619      	mov	r1, r3
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	400a      	ands	r2, r1
 80003e2:	601a      	str	r2, [r3, #0]
        pGpioHandler->GPIOX->MODER |= temp;
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	6819      	ldr	r1, [r3, #0]
 80003ea:	7b3a      	ldrb	r2, [r7, #12]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	430a      	orrs	r2, r1
 80003f2:	601a      	str	r2, [r3, #0]
        temp = 0;
 80003f4:	2300      	movs	r3, #0
 80003f6:	733b      	strb	r3, [r7, #12]

        // pin speed
        temp = ((pGpioHandler->GPIO_Pin_Conf.PinSpeed) << (2 * (pGpioHandler->GPIO_Pin_Conf.PinNum)));
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	799b      	ldrb	r3, [r3, #6]
 80003fc:	461a      	mov	r2, r3
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	791b      	ldrb	r3, [r3, #4]
 8000402:	005b      	lsls	r3, r3, #1
 8000404:	fa02 f303 	lsl.w	r3, r2, r3
 8000408:	733b      	strb	r3, [r7, #12]
        pGpioHandler->GPIOX->OSPEEDR &= ~((0x3) << (pGpioHandler->GPIO_Pin_Conf.PinNum));
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	689a      	ldr	r2, [r3, #8]
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	791b      	ldrb	r3, [r3, #4]
 8000414:	4619      	mov	r1, r3
 8000416:	2303      	movs	r3, #3
 8000418:	408b      	lsls	r3, r1
 800041a:	43db      	mvns	r3, r3
 800041c:	4619      	mov	r1, r3
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	400a      	ands	r2, r1
 8000424:	609a      	str	r2, [r3, #8]
        pGpioHandler->GPIOX->OSPEEDR |= temp;
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	6899      	ldr	r1, [r3, #8]
 800042c:	7b3a      	ldrb	r2, [r7, #12]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	430a      	orrs	r2, r1
 8000434:	609a      	str	r2, [r3, #8]
        temp = 0;
 8000436:	2300      	movs	r3, #0
 8000438:	733b      	strb	r3, [r7, #12]

        // pin pupd control

        temp = ((pGpioHandler->GPIO_Pin_Conf.PinPUPDR) << (2 * (pGpioHandler->GPIO_Pin_Conf.PinNum)));
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	79db      	ldrb	r3, [r3, #7]
 800043e:	461a      	mov	r2, r3
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	791b      	ldrb	r3, [r3, #4]
 8000444:	005b      	lsls	r3, r3, #1
 8000446:	fa02 f303 	lsl.w	r3, r2, r3
 800044a:	733b      	strb	r3, [r7, #12]
        pGpioHandler->GPIOX->PUPDR &= ~((0x3) << (pGpioHandler->GPIO_Pin_Conf.PinNum));
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	68da      	ldr	r2, [r3, #12]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	791b      	ldrb	r3, [r3, #4]
 8000456:	4619      	mov	r1, r3
 8000458:	2303      	movs	r3, #3
 800045a:	408b      	lsls	r3, r1
 800045c:	43db      	mvns	r3, r3
 800045e:	4619      	mov	r1, r3
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	400a      	ands	r2, r1
 8000466:	60da      	str	r2, [r3, #12]
        pGpioHandler->GPIOX->PUPDR |= temp;
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	68d9      	ldr	r1, [r3, #12]
 800046e:	7b3a      	ldrb	r2, [r7, #12]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	430a      	orrs	r2, r1
 8000476:	60da      	str	r2, [r3, #12]
        temp = 0;
 8000478:	2300      	movs	r3, #0
 800047a:	733b      	strb	r3, [r7, #12]

        // pin otype control

        temp = ((pGpioHandler->GPIO_Pin_Conf.PinOPTYP) << ((pGpioHandler->GPIO_Pin_Conf.PinNum)));
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	7a1b      	ldrb	r3, [r3, #8]
 8000480:	461a      	mov	r2, r3
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	791b      	ldrb	r3, [r3, #4]
 8000486:	fa02 f303 	lsl.w	r3, r2, r3
 800048a:	733b      	strb	r3, [r7, #12]
        pGpioHandler->GPIOX->OTYPER &= ~((0x3) << (pGpioHandler->GPIO_Pin_Conf.PinNum));
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	685a      	ldr	r2, [r3, #4]
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	791b      	ldrb	r3, [r3, #4]
 8000496:	4619      	mov	r1, r3
 8000498:	2303      	movs	r3, #3
 800049a:	408b      	lsls	r3, r1
 800049c:	43db      	mvns	r3, r3
 800049e:	4619      	mov	r1, r3
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	400a      	ands	r2, r1
 80004a6:	605a      	str	r2, [r3, #4]
        pGpioHandler->GPIOX->OTYPER |= temp;
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	6859      	ldr	r1, [r3, #4]
 80004ae:	7b3a      	ldrb	r2, [r7, #12]
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	430a      	orrs	r2, r1
 80004b6:	605a      	str	r2, [r3, #4]
        temp = 0;
 80004b8:	2300      	movs	r3, #0
 80004ba:	733b      	strb	r3, [r7, #12]

        // pin alternate fn  control
        if ((pGpioHandler->GPIO_Pin_Conf.PinMode) == GPIO_MODE_ALTFN)
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	795b      	ldrb	r3, [r3, #5]
 80004c0:	2b02      	cmp	r3, #2
 80004c2:	f040 80c6 	bne.w	8000652 <GPIO_init+0x2ba>
        {
            // config for the alt fn
            uint8_t temp1, temp2;
            temp1 = (pGpioHandler->GPIO_Pin_Conf.PinNum) / 8;
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	08db      	lsrs	r3, r3, #3
 80004cc:	72fb      	strb	r3, [r7, #11]
            temp2 = (pGpioHandler->GPIO_Pin_Conf.PinNum) % 8;
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	791b      	ldrb	r3, [r3, #4]
 80004d2:	f003 0307 	and.w	r3, r3, #7
 80004d6:	72bb      	strb	r3, [r7, #10]
            pGpioHandler->GPIOX->AFR[temp1] &= ~((0xF) << (temp2));
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	7afa      	ldrb	r2, [r7, #11]
 80004de:	3208      	adds	r2, #8
 80004e0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004e4:	7abb      	ldrb	r3, [r7, #10]
 80004e6:	220f      	movs	r2, #15
 80004e8:	fa02 f303 	lsl.w	r3, r2, r3
 80004ec:	43db      	mvns	r3, r3
 80004ee:	4618      	mov	r0, r3
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	7afa      	ldrb	r2, [r7, #11]
 80004f6:	4001      	ands	r1, r0
 80004f8:	3208      	adds	r2, #8
 80004fa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
            pGpioHandler->GPIOX->AFR[temp1] |= ((pGpioHandler->GPIO_Pin_Conf.PinAltFn) << (4 * (temp2)));
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	7afa      	ldrb	r2, [r7, #11]
 8000504:	3208      	adds	r2, #8
 8000506:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	7a5b      	ldrb	r3, [r3, #9]
 800050e:	461a      	mov	r2, r3
 8000510:	7abb      	ldrb	r3, [r7, #10]
 8000512:	009b      	lsls	r3, r3, #2
 8000514:	fa02 f303 	lsl.w	r3, r2, r3
 8000518:	4618      	mov	r0, r3
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	7afa      	ldrb	r2, [r7, #11]
 8000520:	4301      	orrs	r1, r0
 8000522:	3208      	adds	r2, #8
 8000524:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
                // ENABLE INTERRUPT DELIVERY
                EXTI ->IMR |= ( 1 <<pGpioHandler->GPIO_Pin_Conf.PinNum );


        }
}
 8000528:	e093      	b.n	8000652 <GPIO_init+0x2ba>
            if (pGpioHandler->GPIO_Pin_Conf.PinMode == GPIO_MODE_IT_FT )
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	795b      	ldrb	r3, [r3, #5]
 800052e:	2b04      	cmp	r3, #4
 8000530:	d117      	bne.n	8000562 <GPIO_init+0x1ca>
                EXTI ->FTSR |= (1 <<pGpioHandler->GPIO_Pin_Conf.PinNum ) ;
 8000532:	4b4a      	ldr	r3, [pc, #296]	; (800065c <GPIO_init+0x2c4>)
 8000534:	68db      	ldr	r3, [r3, #12]
 8000536:	687a      	ldr	r2, [r7, #4]
 8000538:	7912      	ldrb	r2, [r2, #4]
 800053a:	4611      	mov	r1, r2
 800053c:	2201      	movs	r2, #1
 800053e:	408a      	lsls	r2, r1
 8000540:	4611      	mov	r1, r2
 8000542:	4a46      	ldr	r2, [pc, #280]	; (800065c <GPIO_init+0x2c4>)
 8000544:	430b      	orrs	r3, r1
 8000546:	60d3      	str	r3, [r2, #12]
                EXTI ->RTSR &= ~(1 <<pGpioHandler->GPIO_Pin_Conf.PinNum ) ;
 8000548:	4b44      	ldr	r3, [pc, #272]	; (800065c <GPIO_init+0x2c4>)
 800054a:	689b      	ldr	r3, [r3, #8]
 800054c:	687a      	ldr	r2, [r7, #4]
 800054e:	7912      	ldrb	r2, [r2, #4]
 8000550:	4611      	mov	r1, r2
 8000552:	2201      	movs	r2, #1
 8000554:	408a      	lsls	r2, r1
 8000556:	43d2      	mvns	r2, r2
 8000558:	4611      	mov	r1, r2
 800055a:	4a40      	ldr	r2, [pc, #256]	; (800065c <GPIO_init+0x2c4>)
 800055c:	400b      	ands	r3, r1
 800055e:	6093      	str	r3, [r2, #8]
 8000560:	e035      	b.n	80005ce <GPIO_init+0x236>
            else if (pGpioHandler->GPIO_Pin_Conf.PinMode == GPIO_MODE_IT_RT)
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	795b      	ldrb	r3, [r3, #5]
 8000566:	2b05      	cmp	r3, #5
 8000568:	d117      	bne.n	800059a <GPIO_init+0x202>
                EXTI ->RTSR |= (1 <<pGpioHandler->GPIO_Pin_Conf.PinNum ) ;
 800056a:	4b3c      	ldr	r3, [pc, #240]	; (800065c <GPIO_init+0x2c4>)
 800056c:	689b      	ldr	r3, [r3, #8]
 800056e:	687a      	ldr	r2, [r7, #4]
 8000570:	7912      	ldrb	r2, [r2, #4]
 8000572:	4611      	mov	r1, r2
 8000574:	2201      	movs	r2, #1
 8000576:	408a      	lsls	r2, r1
 8000578:	4611      	mov	r1, r2
 800057a:	4a38      	ldr	r2, [pc, #224]	; (800065c <GPIO_init+0x2c4>)
 800057c:	430b      	orrs	r3, r1
 800057e:	6093      	str	r3, [r2, #8]
                EXTI ->FTSR &= ~(1 <<pGpioHandler->GPIO_Pin_Conf.PinNum ) ;
 8000580:	4b36      	ldr	r3, [pc, #216]	; (800065c <GPIO_init+0x2c4>)
 8000582:	68db      	ldr	r3, [r3, #12]
 8000584:	687a      	ldr	r2, [r7, #4]
 8000586:	7912      	ldrb	r2, [r2, #4]
 8000588:	4611      	mov	r1, r2
 800058a:	2201      	movs	r2, #1
 800058c:	408a      	lsls	r2, r1
 800058e:	43d2      	mvns	r2, r2
 8000590:	4611      	mov	r1, r2
 8000592:	4a32      	ldr	r2, [pc, #200]	; (800065c <GPIO_init+0x2c4>)
 8000594:	400b      	ands	r3, r1
 8000596:	60d3      	str	r3, [r2, #12]
 8000598:	e019      	b.n	80005ce <GPIO_init+0x236>
            else if (pGpioHandler->GPIO_Pin_Conf.PinMode == GPIO_MODE_IT_RFT)
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	795b      	ldrb	r3, [r3, #5]
 800059e:	2b06      	cmp	r3, #6
 80005a0:	d115      	bne.n	80005ce <GPIO_init+0x236>
                EXTI ->RTSR |=  (1 <<pGpioHandler->GPIO_Pin_Conf.PinNum ) ;
 80005a2:	4b2e      	ldr	r3, [pc, #184]	; (800065c <GPIO_init+0x2c4>)
 80005a4:	689b      	ldr	r3, [r3, #8]
 80005a6:	687a      	ldr	r2, [r7, #4]
 80005a8:	7912      	ldrb	r2, [r2, #4]
 80005aa:	4611      	mov	r1, r2
 80005ac:	2201      	movs	r2, #1
 80005ae:	408a      	lsls	r2, r1
 80005b0:	4611      	mov	r1, r2
 80005b2:	4a2a      	ldr	r2, [pc, #168]	; (800065c <GPIO_init+0x2c4>)
 80005b4:	430b      	orrs	r3, r1
 80005b6:	6093      	str	r3, [r2, #8]
                EXTI ->FTSR |=  (1 <<pGpioHandler->GPIO_Pin_Conf.PinNum ) ;
 80005b8:	4b28      	ldr	r3, [pc, #160]	; (800065c <GPIO_init+0x2c4>)
 80005ba:	68db      	ldr	r3, [r3, #12]
 80005bc:	687a      	ldr	r2, [r7, #4]
 80005be:	7912      	ldrb	r2, [r2, #4]
 80005c0:	4611      	mov	r1, r2
 80005c2:	2201      	movs	r2, #1
 80005c4:	408a      	lsls	r2, r1
 80005c6:	4611      	mov	r1, r2
 80005c8:	4a24      	ldr	r2, [pc, #144]	; (800065c <GPIO_init+0x2c4>)
 80005ca:	430b      	orrs	r3, r1
 80005cc:	60d3      	str	r3, [r2, #12]
                uint8_t temp4  =pGpioHandler->GPIO_Pin_Conf.PinNum / 4;
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	791b      	ldrb	r3, [r3, #4]
 80005d2:	089b      	lsrs	r3, r3, #2
 80005d4:	73fb      	strb	r3, [r7, #15]
                uint8_t temp5 =pGpioHandler->GPIO_Pin_Conf.PinNum % 4;
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	791b      	ldrb	r3, [r3, #4]
 80005da:	f003 0303 	and.w	r3, r3, #3
 80005de:	73bb      	strb	r3, [r7, #14]
                uint8_t pinCode = GPIO_BASE_CODE(pGpioHandler->GPIOX) ;
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a1e      	ldr	r2, [pc, #120]	; (8000660 <GPIO_init+0x2c8>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d016      	beq.n	8000618 <GPIO_init+0x280>
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a1d      	ldr	r2, [pc, #116]	; (8000664 <GPIO_init+0x2cc>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d00f      	beq.n	8000614 <GPIO_init+0x27c>
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	4a1b      	ldr	r2, [pc, #108]	; (8000668 <GPIO_init+0x2d0>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d008      	beq.n	8000610 <GPIO_init+0x278>
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	4a1a      	ldr	r2, [pc, #104]	; (800066c <GPIO_init+0x2d4>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d101      	bne.n	800060c <GPIO_init+0x274>
 8000608:	2303      	movs	r3, #3
 800060a:	e006      	b.n	800061a <GPIO_init+0x282>
 800060c:	2300      	movs	r3, #0
 800060e:	e004      	b.n	800061a <GPIO_init+0x282>
 8000610:	2302      	movs	r3, #2
 8000612:	e002      	b.n	800061a <GPIO_init+0x282>
 8000614:	2301      	movs	r3, #1
 8000616:	e000      	b.n	800061a <GPIO_init+0x282>
 8000618:	2300      	movs	r3, #0
 800061a:	737b      	strb	r3, [r7, #13]
                SYSCFG_PCLK_EN;
 800061c:	4b14      	ldr	r3, [pc, #80]	; (8000670 <GPIO_init+0x2d8>)
 800061e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000620:	4a13      	ldr	r2, [pc, #76]	; (8000670 <GPIO_init+0x2d8>)
 8000622:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000626:	6453      	str	r3, [r2, #68]	; 0x44
                SYSCFG -> EXTICR[temp4] = (pinCode << temp5 * 4 );
 8000628:	7b7a      	ldrb	r2, [r7, #13]
 800062a:	7bbb      	ldrb	r3, [r7, #14]
 800062c:	009b      	lsls	r3, r3, #2
 800062e:	fa02 f103 	lsl.w	r1, r2, r3
 8000632:	4a10      	ldr	r2, [pc, #64]	; (8000674 <GPIO_init+0x2dc>)
 8000634:	7bfb      	ldrb	r3, [r7, #15]
 8000636:	3302      	adds	r3, #2
 8000638:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                EXTI ->IMR |= ( 1 <<pGpioHandler->GPIO_Pin_Conf.PinNum );
 800063c:	4b07      	ldr	r3, [pc, #28]	; (800065c <GPIO_init+0x2c4>)
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	687a      	ldr	r2, [r7, #4]
 8000642:	7912      	ldrb	r2, [r2, #4]
 8000644:	4611      	mov	r1, r2
 8000646:	2201      	movs	r2, #1
 8000648:	408a      	lsls	r2, r1
 800064a:	4611      	mov	r1, r2
 800064c:	4a03      	ldr	r2, [pc, #12]	; (800065c <GPIO_init+0x2c4>)
 800064e:	430b      	orrs	r3, r1
 8000650:	6013      	str	r3, [r2, #0]
}
 8000652:	bf00      	nop
 8000654:	3710      	adds	r7, #16
 8000656:	46bd      	mov	sp, r7
 8000658:	bd80      	pop	{r7, pc}
 800065a:	bf00      	nop
 800065c:	40013c00 	.word	0x40013c00
 8000660:	40020000 	.word	0x40020000
 8000664:	40020400 	.word	0x40020400
 8000668:	40020800 	.word	0x40020800
 800066c:	40020c00 	.word	0x40020c00
 8000670:	40023800 	.word	0x40023800
 8000674:	40013800 	.word	0x40013800

08000678 <GPIO_ToggPin>:
*
* @Note              -  none

 */
void GPIO_ToggPin(GPIO_REGDEF *pGpiox  , uint8_t pinNum  )
{
 8000678:	b480      	push	{r7}
 800067a:	b083      	sub	sp, #12
 800067c:	af00      	add	r7, sp, #0
 800067e:	6078      	str	r0, [r7, #4]
 8000680:	460b      	mov	r3, r1
 8000682:	70fb      	strb	r3, [r7, #3]

    pGpiox -> ODR  ^= (1<<pinNum);
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	695b      	ldr	r3, [r3, #20]
 8000688:	78fa      	ldrb	r2, [r7, #3]
 800068a:	2101      	movs	r1, #1
 800068c:	fa01 f202 	lsl.w	r2, r1, r2
 8000690:	405a      	eors	r2, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	615a      	str	r2, [r3, #20]
}
 8000696:	bf00      	nop
 8000698:	370c      	adds	r7, #12
 800069a:	46bd      	mov	sp, r7
 800069c:	bc80      	pop	{r7}
 800069e:	4770      	bx	lr

080006a0 <GPIO_IRQconf>:
* @Note              -  none

 */

void GPIO_IRQconf (uint8_t IRQnum ,uint8_t ENORDS )
{
 80006a0:	b480      	push	{r7}
 80006a2:	b083      	sub	sp, #12
 80006a4:	af00      	add	r7, sp, #0
 80006a6:	4603      	mov	r3, r0
 80006a8:	460a      	mov	r2, r1
 80006aa:	71fb      	strb	r3, [r7, #7]
 80006ac:	4613      	mov	r3, r2
 80006ae:	71bb      	strb	r3, [r7, #6]
    if (ENORDS == ENABLE)
 80006b0:	79bb      	ldrb	r3, [r7, #6]
 80006b2:	2b01      	cmp	r3, #1
 80006b4:	d133      	bne.n	800071e <GPIO_IRQconf+0x7e>
    {
            if (IRQnum <= 31 )
 80006b6:	79fb      	ldrb	r3, [r7, #7]
 80006b8:	2b1f      	cmp	r3, #31
 80006ba:	d80a      	bhi.n	80006d2 <GPIO_IRQconf+0x32>
            {
                NVIC_ISER0 |= (1 << IRQnum );
 80006bc:	4b34      	ldr	r3, [pc, #208]	; (8000790 <GPIO_IRQconf+0xf0>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	79fa      	ldrb	r2, [r7, #7]
 80006c2:	2101      	movs	r1, #1
 80006c4:	fa01 f202 	lsl.w	r2, r1, r2
 80006c8:	4611      	mov	r1, r2
 80006ca:	4a31      	ldr	r2, [pc, #196]	; (8000790 <GPIO_IRQconf+0xf0>)
 80006cc:	430b      	orrs	r3, r1
 80006ce:	6013      	str	r3, [r2, #0]

              NVIC_ICER2 |= (1 << IRQnum % 64);
            }

    }
}
 80006d0:	e059      	b.n	8000786 <GPIO_IRQconf+0xe6>
            else if (IRQnum > 31 && IRQnum < 64 )
 80006d2:	79fb      	ldrb	r3, [r7, #7]
 80006d4:	2b1f      	cmp	r3, #31
 80006d6:	d90f      	bls.n	80006f8 <GPIO_IRQconf+0x58>
 80006d8:	79fb      	ldrb	r3, [r7, #7]
 80006da:	2b3f      	cmp	r3, #63	; 0x3f
 80006dc:	d80c      	bhi.n	80006f8 <GPIO_IRQconf+0x58>
              NVIC_ISER1 |= (1 << IRQnum % 32);
 80006de:	4b2d      	ldr	r3, [pc, #180]	; (8000794 <GPIO_IRQconf+0xf4>)
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	79fa      	ldrb	r2, [r7, #7]
 80006e4:	f002 021f 	and.w	r2, r2, #31
 80006e8:	2101      	movs	r1, #1
 80006ea:	fa01 f202 	lsl.w	r2, r1, r2
 80006ee:	4611      	mov	r1, r2
 80006f0:	4a28      	ldr	r2, [pc, #160]	; (8000794 <GPIO_IRQconf+0xf4>)
 80006f2:	430b      	orrs	r3, r1
 80006f4:	6013      	str	r3, [r2, #0]
 80006f6:	e046      	b.n	8000786 <GPIO_IRQconf+0xe6>
            else if (IRQnum >= 64 && IRQnum < 96 )
 80006f8:	79fb      	ldrb	r3, [r7, #7]
 80006fa:	2b3f      	cmp	r3, #63	; 0x3f
 80006fc:	d943      	bls.n	8000786 <GPIO_IRQconf+0xe6>
 80006fe:	79fb      	ldrb	r3, [r7, #7]
 8000700:	2b5f      	cmp	r3, #95	; 0x5f
 8000702:	d840      	bhi.n	8000786 <GPIO_IRQconf+0xe6>
              NVIC_ISER2 |= (1 << IRQnum % 64);
 8000704:	4b24      	ldr	r3, [pc, #144]	; (8000798 <GPIO_IRQconf+0xf8>)
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	79fa      	ldrb	r2, [r7, #7]
 800070a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800070e:	2101      	movs	r1, #1
 8000710:	fa01 f202 	lsl.w	r2, r1, r2
 8000714:	4611      	mov	r1, r2
 8000716:	4a20      	ldr	r2, [pc, #128]	; (8000798 <GPIO_IRQconf+0xf8>)
 8000718:	430b      	orrs	r3, r1
 800071a:	6013      	str	r3, [r2, #0]
}
 800071c:	e033      	b.n	8000786 <GPIO_IRQconf+0xe6>
        if (IRQnum <= 31 )
 800071e:	79fb      	ldrb	r3, [r7, #7]
 8000720:	2b1f      	cmp	r3, #31
 8000722:	d80a      	bhi.n	800073a <GPIO_IRQconf+0x9a>
                NVIC_ICER0 |= (1 << IRQnum );
 8000724:	4b1d      	ldr	r3, [pc, #116]	; (800079c <GPIO_IRQconf+0xfc>)
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	79fa      	ldrb	r2, [r7, #7]
 800072a:	2101      	movs	r1, #1
 800072c:	fa01 f202 	lsl.w	r2, r1, r2
 8000730:	4611      	mov	r1, r2
 8000732:	4a1a      	ldr	r2, [pc, #104]	; (800079c <GPIO_IRQconf+0xfc>)
 8000734:	430b      	orrs	r3, r1
 8000736:	6013      	str	r3, [r2, #0]
}
 8000738:	e025      	b.n	8000786 <GPIO_IRQconf+0xe6>
            else if (IRQnum > 31 && IRQnum < 64 )
 800073a:	79fb      	ldrb	r3, [r7, #7]
 800073c:	2b1f      	cmp	r3, #31
 800073e:	d90f      	bls.n	8000760 <GPIO_IRQconf+0xc0>
 8000740:	79fb      	ldrb	r3, [r7, #7]
 8000742:	2b3f      	cmp	r3, #63	; 0x3f
 8000744:	d80c      	bhi.n	8000760 <GPIO_IRQconf+0xc0>
              NVIC_ICER1 |= (1 << IRQnum % 32);
 8000746:	4b16      	ldr	r3, [pc, #88]	; (80007a0 <GPIO_IRQconf+0x100>)
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	79fa      	ldrb	r2, [r7, #7]
 800074c:	f002 021f 	and.w	r2, r2, #31
 8000750:	2101      	movs	r1, #1
 8000752:	fa01 f202 	lsl.w	r2, r1, r2
 8000756:	4611      	mov	r1, r2
 8000758:	4a11      	ldr	r2, [pc, #68]	; (80007a0 <GPIO_IRQconf+0x100>)
 800075a:	430b      	orrs	r3, r1
 800075c:	6013      	str	r3, [r2, #0]
 800075e:	e012      	b.n	8000786 <GPIO_IRQconf+0xe6>
            else if (IRQnum >= 64 && IRQnum < 96 )
 8000760:	79fb      	ldrb	r3, [r7, #7]
 8000762:	2b3f      	cmp	r3, #63	; 0x3f
 8000764:	d90f      	bls.n	8000786 <GPIO_IRQconf+0xe6>
 8000766:	79fb      	ldrb	r3, [r7, #7]
 8000768:	2b5f      	cmp	r3, #95	; 0x5f
 800076a:	d80c      	bhi.n	8000786 <GPIO_IRQconf+0xe6>
              NVIC_ICER2 |= (1 << IRQnum % 64);
 800076c:	4b0d      	ldr	r3, [pc, #52]	; (80007a4 <GPIO_IRQconf+0x104>)
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	79fa      	ldrb	r2, [r7, #7]
 8000772:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000776:	2101      	movs	r1, #1
 8000778:	fa01 f202 	lsl.w	r2, r1, r2
 800077c:	4611      	mov	r1, r2
 800077e:	4a09      	ldr	r2, [pc, #36]	; (80007a4 <GPIO_IRQconf+0x104>)
 8000780:	430b      	orrs	r3, r1
 8000782:	6013      	str	r3, [r2, #0]
}
 8000784:	e7ff      	b.n	8000786 <GPIO_IRQconf+0xe6>
 8000786:	bf00      	nop
 8000788:	370c      	adds	r7, #12
 800078a:	46bd      	mov	sp, r7
 800078c:	bc80      	pop	{r7}
 800078e:	4770      	bx	lr
 8000790:	e000e100 	.word	0xe000e100
 8000794:	e000e104 	.word	0xe000e104
 8000798:	e000e108 	.word	0xe000e108
 800079c:	e000e180 	.word	0xe000e180
 80007a0:	e000e184 	.word	0xe000e184
 80007a4:	e000e188 	.word	0xe000e188

080007a8 <GPIO_PriorityConf>:
*
* @Note              -  none

 */
void GPIO_PriorityConf ( uint8_t IRQpriority , uint8_t IRQnum)
{
 80007a8:	b480      	push	{r7}
 80007aa:	b085      	sub	sp, #20
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	4603      	mov	r3, r0
 80007b0:	460a      	mov	r2, r1
 80007b2:	71fb      	strb	r3, [r7, #7]
 80007b4:	4613      	mov	r3, r2
 80007b6:	71bb      	strb	r3, [r7, #6]
   uint8_t iprx= IRQnum /4;
 80007b8:	79bb      	ldrb	r3, [r7, #6]
 80007ba:	089b      	lsrs	r3, r3, #2
 80007bc:	73fb      	strb	r3, [r7, #15]
   uint8_t iprx_sec= IRQnum %4;
 80007be:	79bb      	ldrb	r3, [r7, #6]
 80007c0:	f003 0303 	and.w	r3, r3, #3
 80007c4:	73bb      	strb	r3, [r7, #14]
   uint8_t shiftAmount = (  8 * iprx_sec + 8 - NUM_PR_BITS_IMPLEMENTED);
 80007c6:	7bbb      	ldrb	r3, [r7, #14]
 80007c8:	3301      	adds	r3, #1
 80007ca:	b2db      	uxtb	r3, r3
 80007cc:	00db      	lsls	r3, r3, #3
 80007ce:	b2db      	uxtb	r3, r3
 80007d0:	3b04      	subs	r3, #4
 80007d2:	737b      	strb	r3, [r7, #13]
   *( NVIC_IPR + 4*(iprx)) |= (IRQpriority << shiftAmount ) ;
 80007d4:	7bfb      	ldrb	r3, [r7, #15]
 80007d6:	011b      	lsls	r3, r3, #4
 80007d8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80007dc:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80007e0:	681a      	ldr	r2, [r3, #0]
 80007e2:	79f9      	ldrb	r1, [r7, #7]
 80007e4:	7b7b      	ldrb	r3, [r7, #13]
 80007e6:	fa01 f303 	lsl.w	r3, r1, r3
 80007ea:	4619      	mov	r1, r3
 80007ec:	7bfb      	ldrb	r3, [r7, #15]
 80007ee:	011b      	lsls	r3, r3, #4
 80007f0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80007f4:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80007f8:	430a      	orrs	r2, r1
 80007fa:	601a      	str	r2, [r3, #0]
}
 80007fc:	bf00      	nop
 80007fe:	3714      	adds	r7, #20
 8000800:	46bd      	mov	sp, r7
 8000802:	bc80      	pop	{r7}
 8000804:	4770      	bx	lr
	...

08000808 <GPIO_IRQ_Handle>:
* @Note              -  none

 */

void GPIO_IRQ_Handle (uint8_t pinNum)
{
 8000808:	b480      	push	{r7}
 800080a:	b083      	sub	sp, #12
 800080c:	af00      	add	r7, sp, #0
 800080e:	4603      	mov	r3, r0
 8000810:	71fb      	strb	r3, [r7, #7]
    // clear exti pr reg
    if ( EXTI ->PR & (1 << pinNum))
 8000812:	4b0c      	ldr	r3, [pc, #48]	; (8000844 <GPIO_IRQ_Handle+0x3c>)
 8000814:	695b      	ldr	r3, [r3, #20]
 8000816:	79fa      	ldrb	r2, [r7, #7]
 8000818:	2101      	movs	r1, #1
 800081a:	fa01 f202 	lsl.w	r2, r1, r2
 800081e:	4013      	ands	r3, r2
 8000820:	2b00      	cmp	r3, #0
 8000822:	d009      	beq.n	8000838 <GPIO_IRQ_Handle+0x30>
    {
        // clear the bit
        EXTI ->PR |= (1 << pinNum);
 8000824:	4b07      	ldr	r3, [pc, #28]	; (8000844 <GPIO_IRQ_Handle+0x3c>)
 8000826:	695b      	ldr	r3, [r3, #20]
 8000828:	79fa      	ldrb	r2, [r7, #7]
 800082a:	2101      	movs	r1, #1
 800082c:	fa01 f202 	lsl.w	r2, r1, r2
 8000830:	4611      	mov	r1, r2
 8000832:	4a04      	ldr	r2, [pc, #16]	; (8000844 <GPIO_IRQ_Handle+0x3c>)
 8000834:	430b      	orrs	r3, r1
 8000836:	6153      	str	r3, [r2, #20]
    }
}
 8000838:	bf00      	nop
 800083a:	370c      	adds	r7, #12
 800083c:	46bd      	mov	sp, r7
 800083e:	bc80      	pop	{r7}
 8000840:	4770      	bx	lr
 8000842:	bf00      	nop
 8000844:	40013c00 	.word	0x40013c00

08000848 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000848:	480d      	ldr	r0, [pc, #52]	; (8000880 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800084a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800084c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000850:	480c      	ldr	r0, [pc, #48]	; (8000884 <LoopForever+0x6>)
  ldr r1, =_edata
 8000852:	490d      	ldr	r1, [pc, #52]	; (8000888 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000854:	4a0d      	ldr	r2, [pc, #52]	; (800088c <LoopForever+0xe>)
  movs r3, #0
 8000856:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000858:	e002      	b.n	8000860 <LoopCopyDataInit>

0800085a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800085a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800085c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800085e:	3304      	adds	r3, #4

08000860 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000860:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000862:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000864:	d3f9      	bcc.n	800085a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000866:	4a0a      	ldr	r2, [pc, #40]	; (8000890 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000868:	4c0a      	ldr	r4, [pc, #40]	; (8000894 <LoopForever+0x16>)
  movs r3, #0
 800086a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800086c:	e001      	b.n	8000872 <LoopFillZerobss>

0800086e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800086e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000870:	3204      	adds	r2, #4

08000872 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000872:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000874:	d3fb      	bcc.n	800086e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000876:	f000 f819 	bl	80008ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800087a:	f7ff fccb 	bl	8000214 <main>

0800087e <LoopForever>:

LoopForever:
  b LoopForever
 800087e:	e7fe      	b.n	800087e <LoopForever>
  ldr   r0, =_estack
 8000880:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000884:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000888:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800088c:	08000914 	.word	0x08000914
  ldr r2, =_sbss
 8000890:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000894:	2000001c 	.word	0x2000001c

08000898 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000898:	e7fe      	b.n	8000898 <ADC_IRQHandler>

0800089a <memset>:
 800089a:	4402      	add	r2, r0
 800089c:	4603      	mov	r3, r0
 800089e:	4293      	cmp	r3, r2
 80008a0:	d100      	bne.n	80008a4 <memset+0xa>
 80008a2:	4770      	bx	lr
 80008a4:	f803 1b01 	strb.w	r1, [r3], #1
 80008a8:	e7f9      	b.n	800089e <memset+0x4>
	...

080008ac <__libc_init_array>:
 80008ac:	b570      	push	{r4, r5, r6, lr}
 80008ae:	4d0d      	ldr	r5, [pc, #52]	; (80008e4 <__libc_init_array+0x38>)
 80008b0:	4c0d      	ldr	r4, [pc, #52]	; (80008e8 <__libc_init_array+0x3c>)
 80008b2:	1b64      	subs	r4, r4, r5
 80008b4:	10a4      	asrs	r4, r4, #2
 80008b6:	2600      	movs	r6, #0
 80008b8:	42a6      	cmp	r6, r4
 80008ba:	d109      	bne.n	80008d0 <__libc_init_array+0x24>
 80008bc:	4d0b      	ldr	r5, [pc, #44]	; (80008ec <__libc_init_array+0x40>)
 80008be:	4c0c      	ldr	r4, [pc, #48]	; (80008f0 <__libc_init_array+0x44>)
 80008c0:	f000 f818 	bl	80008f4 <_init>
 80008c4:	1b64      	subs	r4, r4, r5
 80008c6:	10a4      	asrs	r4, r4, #2
 80008c8:	2600      	movs	r6, #0
 80008ca:	42a6      	cmp	r6, r4
 80008cc:	d105      	bne.n	80008da <__libc_init_array+0x2e>
 80008ce:	bd70      	pop	{r4, r5, r6, pc}
 80008d0:	f855 3b04 	ldr.w	r3, [r5], #4
 80008d4:	4798      	blx	r3
 80008d6:	3601      	adds	r6, #1
 80008d8:	e7ee      	b.n	80008b8 <__libc_init_array+0xc>
 80008da:	f855 3b04 	ldr.w	r3, [r5], #4
 80008de:	4798      	blx	r3
 80008e0:	3601      	adds	r6, #1
 80008e2:	e7f2      	b.n	80008ca <__libc_init_array+0x1e>
 80008e4:	0800090c 	.word	0x0800090c
 80008e8:	0800090c 	.word	0x0800090c
 80008ec:	0800090c 	.word	0x0800090c
 80008f0:	08000910 	.word	0x08000910

080008f4 <_init>:
 80008f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008f6:	bf00      	nop
 80008f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008fa:	bc08      	pop	{r3}
 80008fc:	469e      	mov	lr, r3
 80008fe:	4770      	bx	lr

08000900 <_fini>:
 8000900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000902:	bf00      	nop
 8000904:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000906:	bc08      	pop	{r3}
 8000908:	469e      	mov	lr, r3
 800090a:	4770      	bx	lr
