
new.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003c4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000558  08000560  00010560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000558  08000558  00010560  2**0
                  CONTENTS
  4 .ARM          00000000  08000558  08000558  00010560  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000558  08000560  00010560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000558  08000558  00010558  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800055c  0800055c  0001055c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000560  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000560  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010560  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001058a  2**0
                  CONTENTS, READONLY
 13 .debug_info   000007e6  00000000  00000000  000105cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000023e  00000000  00000000  00010db3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00010ff8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000072  00000000  00000000  000110a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001651  00000000  00000000  00011112  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000bd8  00000000  00000000  00012763  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004e1a  00000000  00000000  0001333b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000001d4  00000000  00000000  00018158  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000041  00000000  00000000  0001832c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000540 	.word	0x08000540

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000540 	.word	0x08000540

080001d4 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b084      	sub	sp, #16
 80001d8:	af00      	add	r7, sp, #0
//     GPIOD_PCLK_EN;
//     GPIOD->MODER |=  (1 << 4)  ;
//     GPIOD->MODER &= ~(1 << 5)  ;

	GPIO_Handler gpio_led;
	    gpio_led.GPIOX = GPIOA ;
 80001da:	4b0c      	ldr	r3, [pc, #48]	; (800020c <main+0x38>)
 80001dc:	607b      	str	r3, [r7, #4]
	    gpio_led.GPIO_Pin_Conf.PinNum   = GPIO_PIN_3;
 80001de:	2303      	movs	r3, #3
 80001e0:	723b      	strb	r3, [r7, #8]
	    gpio_led.GPIO_Pin_Conf.PinMode  = GPIO_MODE_OUT ;
 80001e2:	2301      	movs	r3, #1
 80001e4:	727b      	strb	r3, [r7, #9]
	    gpio_led.GPIO_Pin_Conf.PinOPTYP = GPIO_OUTYPE_PP ;
 80001e6:	2300      	movs	r3, #0
 80001e8:	733b      	strb	r3, [r7, #12]
	    gpio_led.GPIO_Pin_Conf.PinPUPDR = GPIO_PIN_PUPD_NO ;
 80001ea:	2300      	movs	r3, #0
 80001ec:	72fb      	strb	r3, [r7, #11]
	    gpio_led.GPIO_Pin_Conf.PinSpeed = GPIO_OUTSPEED_HIGH ;
 80001ee:	2302      	movs	r3, #2
 80001f0:	72bb      	strb	r3, [r7, #10]
GPIO_clkCntrl(GPIOA, ENABLE);
 80001f2:	2101      	movs	r1, #1
 80001f4:	4805      	ldr	r0, [pc, #20]	; (800020c <main+0x38>)
 80001f6:	f000 f80b 	bl	8000210 <GPIO_clkCntrl>

GPIO_init(&gpio_led);
 80001fa:	1d3b      	adds	r3, r7, #4
 80001fc:	4618      	mov	r0, r3
 80001fe:	f000 f877 	bl	80002f0 <GPIO_init>

while(1)
{
//	GPIOD->ODR |=  (1 << 2) ;
//	GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_HIGH);
	GPIO_ToggPin(GPIOA, GPIO_PIN_3);
 8000202:	2103      	movs	r1, #3
 8000204:	4801      	ldr	r0, [pc, #4]	; (800020c <main+0x38>)
 8000206:	f000 f939 	bl	800047c <GPIO_ToggPin>
 800020a:	e7fa      	b.n	8000202 <main+0x2e>
 800020c:	40020000 	.word	0x40020000

08000210 <GPIO_clkCntrl>:
*
* @Note              -  none

 */
void GPIO_clkCntrl(GPIO_REGDEF *pGpio, uint8_t EnOrDsi)
{
 8000210:	b480      	push	{r7}
 8000212:	b083      	sub	sp, #12
 8000214:	af00      	add	r7, sp, #0
 8000216:	6078      	str	r0, [r7, #4]
 8000218:	460b      	mov	r3, r1
 800021a:	70fb      	strb	r3, [r7, #3]
    if (EnOrDsi == ENABLE)
 800021c:	78fb      	ldrb	r3, [r7, #3]
 800021e:	2b01      	cmp	r3, #1
 8000220:	d12b      	bne.n	800027a <GPIO_clkCntrl+0x6a>
    {
        if (pGpio == GPIOA)
 8000222:	687b      	ldr	r3, [r7, #4]
 8000224:	4a2d      	ldr	r2, [pc, #180]	; (80002dc <GPIO_clkCntrl+0xcc>)
 8000226:	4293      	cmp	r3, r2
 8000228:	d106      	bne.n	8000238 <GPIO_clkCntrl+0x28>
        {
            GPIOA_PCLK_EN;
 800022a:	4b2d      	ldr	r3, [pc, #180]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 800022c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800022e:	4a2c      	ldr	r2, [pc, #176]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 8000230:	f043 0301 	orr.w	r3, r3, #1
 8000234:	6313      	str	r3, [r2, #48]	; 0x30
        else if (pGpio == GPIOD)
        {
            GPIOD_PCLK_DS;
        }
    }
}
 8000236:	e04b      	b.n	80002d0 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOB)
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	4a2a      	ldr	r2, [pc, #168]	; (80002e4 <GPIO_clkCntrl+0xd4>)
 800023c:	4293      	cmp	r3, r2
 800023e:	d106      	bne.n	800024e <GPIO_clkCntrl+0x3e>
            GPIOB_PCLK_EN;
 8000240:	4b27      	ldr	r3, [pc, #156]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 8000242:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000244:	4a26      	ldr	r2, [pc, #152]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 8000246:	f043 0302 	orr.w	r3, r3, #2
 800024a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800024c:	e040      	b.n	80002d0 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOC)
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	4a25      	ldr	r2, [pc, #148]	; (80002e8 <GPIO_clkCntrl+0xd8>)
 8000252:	4293      	cmp	r3, r2
 8000254:	d106      	bne.n	8000264 <GPIO_clkCntrl+0x54>
            GPIOC_PCLK_EN;
 8000256:	4b22      	ldr	r3, [pc, #136]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 8000258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025a:	4a21      	ldr	r2, [pc, #132]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 800025c:	f043 0304 	orr.w	r3, r3, #4
 8000260:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000262:	e035      	b.n	80002d0 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOD)
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	4a21      	ldr	r2, [pc, #132]	; (80002ec <GPIO_clkCntrl+0xdc>)
 8000268:	4293      	cmp	r3, r2
 800026a:	d131      	bne.n	80002d0 <GPIO_clkCntrl+0xc0>
            GPIOD_PCLK_EN;
 800026c:	4b1c      	ldr	r3, [pc, #112]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 800026e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000270:	4a1b      	ldr	r2, [pc, #108]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 8000272:	f043 0308 	orr.w	r3, r3, #8
 8000276:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000278:	e02a      	b.n	80002d0 <GPIO_clkCntrl+0xc0>
        if (pGpio == GPIOA)
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	4a17      	ldr	r2, [pc, #92]	; (80002dc <GPIO_clkCntrl+0xcc>)
 800027e:	4293      	cmp	r3, r2
 8000280:	d106      	bne.n	8000290 <GPIO_clkCntrl+0x80>
            GPIOA_PCLK_DS;
 8000282:	4b17      	ldr	r3, [pc, #92]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 8000284:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000286:	4a16      	ldr	r2, [pc, #88]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 8000288:	f023 0301 	bic.w	r3, r3, #1
 800028c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800028e:	e01f      	b.n	80002d0 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOB)
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	4a14      	ldr	r2, [pc, #80]	; (80002e4 <GPIO_clkCntrl+0xd4>)
 8000294:	4293      	cmp	r3, r2
 8000296:	d106      	bne.n	80002a6 <GPIO_clkCntrl+0x96>
            GPIOB_PCLK_DS;
 8000298:	4b11      	ldr	r3, [pc, #68]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 800029a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800029c:	4a10      	ldr	r2, [pc, #64]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 800029e:	f023 0302 	bic.w	r3, r3, #2
 80002a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a4:	e014      	b.n	80002d0 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOC)
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	4a0f      	ldr	r2, [pc, #60]	; (80002e8 <GPIO_clkCntrl+0xd8>)
 80002aa:	4293      	cmp	r3, r2
 80002ac:	d106      	bne.n	80002bc <GPIO_clkCntrl+0xac>
            GPIOC_PCLK_DS;
 80002ae:	4b0c      	ldr	r3, [pc, #48]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 80002b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b2:	4a0b      	ldr	r2, [pc, #44]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 80002b4:	f023 0304 	bic.w	r3, r3, #4
 80002b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ba:	e009      	b.n	80002d0 <GPIO_clkCntrl+0xc0>
        else if (pGpio == GPIOD)
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	4a0b      	ldr	r2, [pc, #44]	; (80002ec <GPIO_clkCntrl+0xdc>)
 80002c0:	4293      	cmp	r3, r2
 80002c2:	d105      	bne.n	80002d0 <GPIO_clkCntrl+0xc0>
            GPIOD_PCLK_DS;
 80002c4:	4b06      	ldr	r3, [pc, #24]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a05      	ldr	r2, [pc, #20]	; (80002e0 <GPIO_clkCntrl+0xd0>)
 80002ca:	f023 0308 	bic.w	r3, r3, #8
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d0:	bf00      	nop
 80002d2:	370c      	adds	r7, #12
 80002d4:	46bd      	mov	sp, r7
 80002d6:	bc80      	pop	{r7}
 80002d8:	4770      	bx	lr
 80002da:	bf00      	nop
 80002dc:	40020000 	.word	0x40020000
 80002e0:	40023800 	.word	0x40023800
 80002e4:	40020400 	.word	0x40020400
 80002e8:	40020800 	.word	0x40020800
 80002ec:	40020c00 	.word	0x40020c00

080002f0 <GPIO_init>:
* @Note              -  none

 */
void GPIO_init(GPIO_Handler *pGpioHandler)

{ // pin number
 80002f0:	b480      	push	{r7}
 80002f2:	b085      	sub	sp, #20
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
    if (pGpioHandler->GPIO_Pin_Conf.PinMode <= GPIO_MODE_ANALOG)
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	795b      	ldrb	r3, [r3, #5]
 80002fc:	2b03      	cmp	r3, #3
 80002fe:	f200 80b8 	bhi.w	8000472 <GPIO_init+0x182>
    {
        // pin mode
        uint8_t temp;
        temp = ((pGpioHandler->GPIO_Pin_Conf.PinMode) << (2 * (pGpioHandler->GPIO_Pin_Conf.PinNum)));
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	795b      	ldrb	r3, [r3, #5]
 8000306:	461a      	mov	r2, r3
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	791b      	ldrb	r3, [r3, #4]
 800030c:	005b      	lsls	r3, r3, #1
 800030e:	fa02 f303 	lsl.w	r3, r2, r3
 8000312:	73fb      	strb	r3, [r7, #15]
        pGpioHandler->GPIOX->MODER &= ~((0x3) << (pGpioHandler->GPIO_Pin_Conf.PinNum));
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	681a      	ldr	r2, [r3, #0]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	791b      	ldrb	r3, [r3, #4]
 800031e:	4619      	mov	r1, r3
 8000320:	2303      	movs	r3, #3
 8000322:	408b      	lsls	r3, r1
 8000324:	43db      	mvns	r3, r3
 8000326:	4619      	mov	r1, r3
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	400a      	ands	r2, r1
 800032e:	601a      	str	r2, [r3, #0]
        pGpioHandler->GPIOX->MODER |= temp;
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	6819      	ldr	r1, [r3, #0]
 8000336:	7bfa      	ldrb	r2, [r7, #15]
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	430a      	orrs	r2, r1
 800033e:	601a      	str	r2, [r3, #0]
        temp = 0;
 8000340:	2300      	movs	r3, #0
 8000342:	73fb      	strb	r3, [r7, #15]

        // pin speed
        temp = ((pGpioHandler->GPIO_Pin_Conf.PinSpeed) << (2 * (pGpioHandler->GPIO_Pin_Conf.PinNum)));
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	799b      	ldrb	r3, [r3, #6]
 8000348:	461a      	mov	r2, r3
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	791b      	ldrb	r3, [r3, #4]
 800034e:	005b      	lsls	r3, r3, #1
 8000350:	fa02 f303 	lsl.w	r3, r2, r3
 8000354:	73fb      	strb	r3, [r7, #15]
        pGpioHandler->GPIOX->OSPEEDR &= ~((0x3) << (pGpioHandler->GPIO_Pin_Conf.PinNum));
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	689a      	ldr	r2, [r3, #8]
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	791b      	ldrb	r3, [r3, #4]
 8000360:	4619      	mov	r1, r3
 8000362:	2303      	movs	r3, #3
 8000364:	408b      	lsls	r3, r1
 8000366:	43db      	mvns	r3, r3
 8000368:	4619      	mov	r1, r3
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	400a      	ands	r2, r1
 8000370:	609a      	str	r2, [r3, #8]
        pGpioHandler->GPIOX->OSPEEDR |= temp;
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	6899      	ldr	r1, [r3, #8]
 8000378:	7bfa      	ldrb	r2, [r7, #15]
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	430a      	orrs	r2, r1
 8000380:	609a      	str	r2, [r3, #8]
        temp = 0;
 8000382:	2300      	movs	r3, #0
 8000384:	73fb      	strb	r3, [r7, #15]

        // pin pupd control

        temp = ((pGpioHandler->GPIO_Pin_Conf.PinPUPDR) << (2 * (pGpioHandler->GPIO_Pin_Conf.PinNum)));
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	79db      	ldrb	r3, [r3, #7]
 800038a:	461a      	mov	r2, r3
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	791b      	ldrb	r3, [r3, #4]
 8000390:	005b      	lsls	r3, r3, #1
 8000392:	fa02 f303 	lsl.w	r3, r2, r3
 8000396:	73fb      	strb	r3, [r7, #15]
        pGpioHandler->GPIOX->PUPDR &= ~((0x3) << (pGpioHandler->GPIO_Pin_Conf.PinNum));
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	68da      	ldr	r2, [r3, #12]
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	791b      	ldrb	r3, [r3, #4]
 80003a2:	4619      	mov	r1, r3
 80003a4:	2303      	movs	r3, #3
 80003a6:	408b      	lsls	r3, r1
 80003a8:	43db      	mvns	r3, r3
 80003aa:	4619      	mov	r1, r3
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	400a      	ands	r2, r1
 80003b2:	60da      	str	r2, [r3, #12]
        pGpioHandler->GPIOX->PUPDR |= temp;
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	68d9      	ldr	r1, [r3, #12]
 80003ba:	7bfa      	ldrb	r2, [r7, #15]
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	430a      	orrs	r2, r1
 80003c2:	60da      	str	r2, [r3, #12]
        temp = 0;
 80003c4:	2300      	movs	r3, #0
 80003c6:	73fb      	strb	r3, [r7, #15]

        // pin otype control

        temp = ((pGpioHandler->GPIO_Pin_Conf.PinOPTYP) << ((pGpioHandler->GPIO_Pin_Conf.PinNum)));
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	7a1b      	ldrb	r3, [r3, #8]
 80003cc:	461a      	mov	r2, r3
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	791b      	ldrb	r3, [r3, #4]
 80003d2:	fa02 f303 	lsl.w	r3, r2, r3
 80003d6:	73fb      	strb	r3, [r7, #15]
        pGpioHandler->GPIOX->OTYPER &= ~((0x3) << (pGpioHandler->GPIO_Pin_Conf.PinNum));
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	685a      	ldr	r2, [r3, #4]
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	791b      	ldrb	r3, [r3, #4]
 80003e2:	4619      	mov	r1, r3
 80003e4:	2303      	movs	r3, #3
 80003e6:	408b      	lsls	r3, r1
 80003e8:	43db      	mvns	r3, r3
 80003ea:	4619      	mov	r1, r3
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	400a      	ands	r2, r1
 80003f2:	605a      	str	r2, [r3, #4]
        pGpioHandler->GPIOX->OTYPER |= temp;
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	6859      	ldr	r1, [r3, #4]
 80003fa:	7bfa      	ldrb	r2, [r7, #15]
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	430a      	orrs	r2, r1
 8000402:	605a      	str	r2, [r3, #4]
        temp = 0;
 8000404:	2300      	movs	r3, #0
 8000406:	73fb      	strb	r3, [r7, #15]

        // pin alternate fn  control
        if ((pGpioHandler->GPIO_Pin_Conf.PinMode) == GPIO_MODE_ALTFN)
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	795b      	ldrb	r3, [r3, #5]
 800040c:	2b02      	cmp	r3, #2
 800040e:	d130      	bne.n	8000472 <GPIO_init+0x182>
        {
            // config for the alt fn
            uint8_t temp1, temp2;
            temp1 = (pGpioHandler->GPIO_Pin_Conf.PinNum) / 8;
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	791b      	ldrb	r3, [r3, #4]
 8000414:	08db      	lsrs	r3, r3, #3
 8000416:	73bb      	strb	r3, [r7, #14]
            temp2 = (pGpioHandler->GPIO_Pin_Conf.PinNum) % 8;
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	791b      	ldrb	r3, [r3, #4]
 800041c:	f003 0307 	and.w	r3, r3, #7
 8000420:	737b      	strb	r3, [r7, #13]
            pGpioHandler->GPIOX->AFR[temp1] &= ~((0xF) << (temp2));
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	7bba      	ldrb	r2, [r7, #14]
 8000428:	3208      	adds	r2, #8
 800042a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800042e:	7b7b      	ldrb	r3, [r7, #13]
 8000430:	220f      	movs	r2, #15
 8000432:	fa02 f303 	lsl.w	r3, r2, r3
 8000436:	43db      	mvns	r3, r3
 8000438:	4618      	mov	r0, r3
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	7bba      	ldrb	r2, [r7, #14]
 8000440:	4001      	ands	r1, r0
 8000442:	3208      	adds	r2, #8
 8000444:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
            pGpioHandler->GPIOX->AFR[temp1] |= ((pGpioHandler->GPIO_Pin_Conf.PinAltFn) << (4 * (temp2)));
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	7bba      	ldrb	r2, [r7, #14]
 800044e:	3208      	adds	r2, #8
 8000450:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	7a5b      	ldrb	r3, [r3, #9]
 8000458:	461a      	mov	r2, r3
 800045a:	7b7b      	ldrb	r3, [r7, #13]
 800045c:	009b      	lsls	r3, r3, #2
 800045e:	fa02 f303 	lsl.w	r3, r2, r3
 8000462:	4618      	mov	r0, r3
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	7bba      	ldrb	r2, [r7, #14]
 800046a:	4301      	orrs	r1, r0
 800046c:	3208      	adds	r2, #8
 800046e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }
    else
    {
        // interput code
    }
}
 8000472:	bf00      	nop
 8000474:	3714      	adds	r7, #20
 8000476:	46bd      	mov	sp, r7
 8000478:	bc80      	pop	{r7}
 800047a:	4770      	bx	lr

0800047c <GPIO_ToggPin>:
*
* @Note              -  none

 */
void GPIO_ToggPin(GPIO_REGDEF *pGpiox  , uint8_t pinNum  )
{
 800047c:	b480      	push	{r7}
 800047e:	b083      	sub	sp, #12
 8000480:	af00      	add	r7, sp, #0
 8000482:	6078      	str	r0, [r7, #4]
 8000484:	460b      	mov	r3, r1
 8000486:	70fb      	strb	r3, [r7, #3]

    pGpiox -> ODR  ^= (1<<pinNum);
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	695b      	ldr	r3, [r3, #20]
 800048c:	78fa      	ldrb	r2, [r7, #3]
 800048e:	2101      	movs	r1, #1
 8000490:	fa01 f202 	lsl.w	r2, r1, r2
 8000494:	405a      	eors	r2, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	615a      	str	r2, [r3, #20]
}
 800049a:	bf00      	nop
 800049c:	370c      	adds	r7, #12
 800049e:	46bd      	mov	sp, r7
 80004a0:	bc80      	pop	{r7}
 80004a2:	4770      	bx	lr

080004a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a4:	480d      	ldr	r0, [pc, #52]	; (80004dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004ac:	480c      	ldr	r0, [pc, #48]	; (80004e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80004ae:	490d      	ldr	r1, [pc, #52]	; (80004e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004b0:	4a0d      	ldr	r2, [pc, #52]	; (80004e8 <LoopForever+0xe>)
  movs r3, #0
 80004b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004b4:	e002      	b.n	80004bc <LoopCopyDataInit>

080004b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004ba:	3304      	adds	r3, #4

080004bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004c0:	d3f9      	bcc.n	80004b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004c2:	4a0a      	ldr	r2, [pc, #40]	; (80004ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80004c4:	4c0a      	ldr	r4, [pc, #40]	; (80004f0 <LoopForever+0x16>)
  movs r3, #0
 80004c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004c8:	e001      	b.n	80004ce <LoopFillZerobss>

080004ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004cc:	3204      	adds	r2, #4

080004ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004d0:	d3fb      	bcc.n	80004ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004d2:	f000 f811 	bl	80004f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004d6:	f7ff fe7d 	bl	80001d4 <main>

080004da <LoopForever>:

LoopForever:
  b LoopForever
 80004da:	e7fe      	b.n	80004da <LoopForever>
  ldr   r0, =_estack
 80004dc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80004e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80004e8:	08000560 	.word	0x08000560
  ldr r2, =_sbss
 80004ec:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80004f0:	2000001c 	.word	0x2000001c

080004f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f4:	e7fe      	b.n	80004f4 <ADC_IRQHandler>
	...

080004f8 <__libc_init_array>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	4d0d      	ldr	r5, [pc, #52]	; (8000530 <__libc_init_array+0x38>)
 80004fc:	4c0d      	ldr	r4, [pc, #52]	; (8000534 <__libc_init_array+0x3c>)
 80004fe:	1b64      	subs	r4, r4, r5
 8000500:	10a4      	asrs	r4, r4, #2
 8000502:	2600      	movs	r6, #0
 8000504:	42a6      	cmp	r6, r4
 8000506:	d109      	bne.n	800051c <__libc_init_array+0x24>
 8000508:	4d0b      	ldr	r5, [pc, #44]	; (8000538 <__libc_init_array+0x40>)
 800050a:	4c0c      	ldr	r4, [pc, #48]	; (800053c <__libc_init_array+0x44>)
 800050c:	f000 f818 	bl	8000540 <_init>
 8000510:	1b64      	subs	r4, r4, r5
 8000512:	10a4      	asrs	r4, r4, #2
 8000514:	2600      	movs	r6, #0
 8000516:	42a6      	cmp	r6, r4
 8000518:	d105      	bne.n	8000526 <__libc_init_array+0x2e>
 800051a:	bd70      	pop	{r4, r5, r6, pc}
 800051c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000520:	4798      	blx	r3
 8000522:	3601      	adds	r6, #1
 8000524:	e7ee      	b.n	8000504 <__libc_init_array+0xc>
 8000526:	f855 3b04 	ldr.w	r3, [r5], #4
 800052a:	4798      	blx	r3
 800052c:	3601      	adds	r6, #1
 800052e:	e7f2      	b.n	8000516 <__libc_init_array+0x1e>
 8000530:	08000558 	.word	0x08000558
 8000534:	08000558 	.word	0x08000558
 8000538:	08000558 	.word	0x08000558
 800053c:	0800055c 	.word	0x0800055c

08000540 <_init>:
 8000540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000542:	bf00      	nop
 8000544:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000546:	bc08      	pop	{r3}
 8000548:	469e      	mov	lr, r3
 800054a:	4770      	bx	lr

0800054c <_fini>:
 800054c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800054e:	bf00      	nop
 8000550:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000552:	bc08      	pop	{r3}
 8000554:	469e      	mov	lr, r3
 8000556:	4770      	bx	lr
